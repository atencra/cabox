function [W1,W2, W3, p] = KendallW(X)
% Compute the Kendall's coefficient of concordance of the matrix X.
% E.g. W = KendallW(RankMatrix)
%
% Input:
%           X must be a N-by-K matrix, N is the number of
%           "candidate" and the K is the number of "judge"
% Outputs:
%           W = Kendall's coefficient of concordance
%
% Created by Lijie Huang, 2010/6/5
% Modified by Craig Atencio, 2/1/16
%==========================================================================

% Does not take ties into account
% Use tiedrank.m to fix this

% Method 1
[N,K] = size(X);
RankMatrix = zeros(N,K);
for i = 1:K
    temp = X(:,i);
    [a,b] = sortrows(temp);
    RankMatrix(b,i) = 1:N;
end
ranksum = sum(RankMatrix,2);
S1 = sum(ranksum.^2,1);
S2 = (sum(ranksum))^2;
S = S1 - S2/N;
temp = N^3 - N;
W1 = 12*S/(K^2*temp);



% Method 2
[N,K] = size(X);
RankMatrix = tiedrank(X);

ranksum = sum(RankMatrix,2);
S1 = sum(ranksum.^2,1);
S2 = (sum(ranksum))^2;
S = S1 - S2/N;
temp = N^3 - N;
W2 = 12*S/(K^2*temp);


% Method 3
[nObs,nVars] = size(X);
RankMatrix = tiedrank(X);

bigT = 0;
for j = 1:size(RankMatrix,2)
    [freq,prop] = hist(RankMatrix(:,j));
    freq = freq(freq>1)
    bigT = bigT + sum(freq.^3 - freq);
end

ranksum = sum(RankMatrix,2);
S1 = sum(ranksum.^2,1);
S2 = (sum(ranksum))^2;
S = S1 - S2 / nObs;
temp = nObs^3 - nObs;
W3 = 12*S/(nVars^2*(nObs^3-nObs) - nVars*bigT);



return;











